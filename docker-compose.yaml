version: '3.8'

services:
  postgres:
    image: 'postgres:latest'
    environment:
      - 'POSTGRES_DB=orderservice_db'
      - 'POSTGRES_PASSWORD=orderservice_pwd'
      - 'POSTGRES_USER=orderservice'
    ports:
      - '5432:5432'
    restart: 'always'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U orderservice -d orderservice_db'" ]

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  numberservice:
    build:
      context: ./number-generateservice
    container_name: numberservice
    ports:
      - "8081:8081"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongo:27017/ordernumber_db?authSource=admin
    depends_on:
      - mongo

  orderservice:
    build:
      context: ./orderservice
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - 'DB_URL=jdbc:postgresql://postgres/orderservice_db'
      - 'DB_USERNAME=orderservice'
      - 'DB_PASSWORD=orderservice_pwd'
      - 'NUMBERSERVICE_URL=http://numberservice:8081'
    depends_on:
      - postgres
      - numberservice

  frontend:
    build:
      context: ./order-react  # Обновленный путь к директории с Dockerfile
      dockerfile: Dockerfile
    volumes:
      - ./order-react/src:/app/src  # Подключаем локальную папку с исходным кодом для горячей перезагрузки
    ports:
      - "3000:3000"  # Порт для доступа к приложению в режиме разработки

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Порт для доступа к Nginx
    volumes:
      - ./order-react/nginx.conf:/etc/nginx/conf.d/default.conf  # Обновленный путь к файлу конфигурации
      - ./order-react/build:/usr/share/nginx/html  # Обновленный путь к собранным файлам
    depends_on:
      - frontend
volumes:
  mongo_data:
